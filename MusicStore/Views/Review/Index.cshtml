@model IEnumerable<MusicStore.Model.Entities.Reviews>
@using Microsoft.AspNetCore.Identity
@inject UserManager<MusicStore.Model.Entities.ApplicationUser> UserManager
@inject MusicStore.Model.Abstract.IEntitiesRepository<MusicStore.Model.Entities.Customer> CustomerRepository

@{
    ViewData["Title"] = "Album Reviews";

    // Get current user ID
    var userId = UserManager.GetUserId(User);

    // Get current customer ID (if any)
    var customer = CustomerRepository.GetAll()
        .FirstOrDefault(c => c.UserId.ToString() == userId);
    var currentCustomerId = customer?.Id ?? 0;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Album Reviews</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-pencil-square me-1"></i> Write a Review
        </a>
    </div>

    <div class="row">
        <div class="col-md-12">
            @if (Model != null && Model.Any())
            {
                @foreach (var review in Model)
                {
                    <div class="card mb-4 shadow-sm">
                        <div class="card-header d-flex justify-content-between align-items-center bg-dark">
                            <div>
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= review.Rating)
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-warning"></i>
                                    }
                                }
                                <span class="ms-2 fw-bold text-success">@review.Album?.Title</span>
                            </div>
                            <small class="text-success">@review.CreatedAt.ToString("MMM dd, yyyy")</small>
                        </div>
                        <div class="card-body">
                            <p class="card-text text-dark">@review.Comment</p>
                            <footer class="blockquote-footer mt-2">
                                Review by <cite title="Reviewer">@review.Customer?.User?.UserName</cite>
                            </footer>
                        </div>
                        <div class="card-footer bg-transparent d-flex justify-content-between">
                            <div>
                                <button class="btn btn-sm btn-outline-secondary me-2">
                                    <i class="bi bi-hand-thumbs-up"></i> Helpful
                                </button>
                                <span class="text-muted">Was this review helpful?</span>
                            </div>

                            @if (User.Identity.IsAuthenticated && review.CustomerId == currentCustomerId)
                            {
                                <div>
                                    <a asp-action="Edit" asp-route-id="@review.ReviewId" class="btn btn-sm btn-outline-primary me-2">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@review.ReviewId" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                </div>
                            }
                       
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    No reviews have been submitted yet. Be the first to write a review!
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Optional JavaScript for additional interactivity
        $(document).ready(function() {
            // Example: Implement "Helpful" button functionality
            $('.btn-outline-secondary').on('click', function() {
                $(this).toggleClass('active');
                // You could add AJAX call here to record the helpful vote
            });
        });
    </script>
}

<style>
    /* Additional custom styles */
    .card-body .card-text {
        color: #000 !important; /* Ensure text is black in all themes */
        font-weight: normal;
    }

    .card-header {
        padding: 0.75rem 1.25rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }

        .card-header .text-success {
            color: #28a745 !important; /* Vibrant green for text in header */
        }
</style>